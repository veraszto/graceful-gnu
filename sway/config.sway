


##### Hello, this config file is part/chunk of the whole config, 
##### there are missing items, consider using the official one from Sway :)


#
#
## Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#

set $mod Alt

include /etc/sway/mod.sway

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
# set $term urxvt256c-ml
# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway

set $menu dmenu_path | dmenu | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)

#xwayland disable

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#


input *
{
	xkb_layout "br,us"
#	xkb_file $HOME/git/GracefulGNU/profile/mycustom.xkb
	repeat_delay 200
	repeat_rate 60
	xkb_numlock enabled 
#	xkb_options "grp:menu_switch,caps:hyper"
}


set $toolbox fedora-toolbox-34


set $bash /bin/bash --login 

#exec xmodmap -e "keycode 38 = e E"


# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
#	bindsym $mod+Shift+y exec /bin/bash --login -c 'echo Hello $MY_GRACEFUL_GNU'
	bindsym Control_R+y exec 'echo Hello $MY_GRACEFUL_GNU'
	bindsym $mod+Insert exec swaynag -t warning -m 'Hello'
	bindsym $mod+Home exec /bin/bash --login ~/git/GracefulGNU/BashScripts/toggle.four.workspaces.sh


	bindsym $mod+Shift+m layout tabbed, \
		exec gnome-terminal --title "Main" -- $bash -c '$MY_GRACEFUL_GNU_BASH_SCRIPTS/build.workspace/MainWithTmux.sh'; \
		exec gnome-terminal --title "Toolbox" -- $bash -c '$MY_STUFF_BASH_SCRIPTS/build.workspace/toolbox.enter.tmux.sh' ; \
		exec gnome-terminal --title "BashContext" -- $bash -c 'tmux -f $MY_TMUX_CONF_BASH_CONTEXT -S $MY_TMUX_SOCKET_BASH_CONTEXT new-session -s BashContext' ; \
		exec gnome-terminal --title "ToolboxBashContext" -- $bash -c \
'$MY_STUFF_BASH_SCRIPTS/build.workspace/toolbox.exec.sh "tmux -f $MY_TMUX_CONF_BASH_CONTEXT -S $MY_TMUX_SOCKET_TOOLBOX_BASH_CONTEXT new-session -s BashContextToolbox"'

#	bindsym $mod+Shift+t exec \
#		gnome-terminal -- /bin/bash --login -c '$MY_GRACEFUL_GNU_BASH_SCRIPTS/build.workspace/MainWithTmux.Toolbox.sh'

	bindsym $mod+Shift+v layout tabbed, \
		exec $bash -c '$MY_GRACEFUL_GNU_BASH_SCRIPTS/build.workspace/VimWithTmux.sh "$MY_TMUX_VIMS_INITIAL_LOADERS"'
	
	bindsym $mod+Shift+i layout tabbed, \
		exec $bash -c '$MY_GRACEFUL_GNU_BASH_SCRIPTS/build.workspace/VimWithTmux.sh "$MY_TMUX_VIMS_NEXT_LOADERS"'


	bindsym $mod+c exec \
		$bash -c $HOME/git/GracefulGNU/BashScripts/transfer.clipboard.sh


	bindsym $mod+Return exec gnome-terminal

	bindsym $mod+Shift+n exec nautilus
	bindsym $mod+Shift+Return exec MOZ_ENABLE_WAYLAND=1 firefox

	#bindsym $mod+i exec $HOME/git/MyStuff/BashScripts/build.myworkspace/launcher.sh

	bindsym $mod+r mode "resize"

    # kill focused window
    bindsym $mod+Shift+q kill

    # start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    #floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+Shift+c reload

    # exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split
	bindsym $mod+Shift+d layout default

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}



# Status Bar:

# Read `man 5 sway-bar` for more information about this section.

#bar
#{
#    position top
#
#	id main
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while echo -en "Danilo G. Veraszto $(date +'%Y-%m-%d %l:%M')"; do sleep 1; done
#
#    colors 
#	{
#        statusline #ffffff
#        background #323232
#        inactive_workspace #323232 #323232 #5c5c5c
#    }
#	workspace_buttons yes
#}


titlebar_border_thickness 0
titlebar_padding 15 3
client.focused #777777 #222222 #ccccff
client.focused_inactive #555555 #444444 #888888
client.unfocused #333333 #333333 #888888


default_border none

set $tmux.main Main
set $tmux.toolbox Toolbox
#set $workspace0 workspace MainNonTerminals
set $workspace0 workspace 0
set $workspace1 workspace 1


set $tmux.select.window.pane \
$bash $HOME/git/GracefulGNU/BashScripts/tmux.select.window.pane.sh $tmux.main

set $tmux.select.window.pane.toolbox \
$bash $HOME/git/GracefulGNU/BashScripts/tmux.select.window.pane.sh $tmux.toolbox


bindsym Mod4+Insert workspace LeftTop
bindsym Mod4+Delete workspace LeftBottom
bindsym Mod4+Home workspace 1
bindsym Mod4+End workspace 0
bindsym Mod4+Prior workspace RightTopCorner
bindsym Mod4+Next workspace RightBottomCorner

bindsym Mod1+Insert [title="^Main$"] focus ; exec $bash -c 'tmux -S $MY_TMUX_SOCKET select-window -t Main:0'
bindsym Mod1+Delete [title="^Toolbox$"] focus ; exec $bash -c 'tmux -S $MY_TMUX_SOCKET_TOOLBOX select-window -t Toolbox:0'
bindsym Mod1+Home [title="^Main$"] focus ; exec $bash -c 'tmux -S $MY_TMUX_SOCKET select-window -t Main:1'
bindsym Mod1+End workspace 0
bindsym Mod1+Prior [title="^Toolbox$"] focus ; exec $bash -c 'tmux -S $MY_TMUX_SOCKET_TOOLBOX select-window -t Toolbox:1'
#bindsym Mod1+Next $alt.pgdown


include /etc/sway/config.d/*

# set $mod4.insert 
# {
# 	$workspace1, \
# 	exec $tmux.select.window.pane.toolbox 0 0
# }
# 
# set $mod4.delete 
# {
# 	$workspace1, \
# 	exec $tmux.select.window.pane.toolbox 0 1
# }
# set $mod4.home 
# {
# 	$workspace1, \
# 	exec $tmux.select.window.pane.toolbox 1 0
# }
# 
# #In Vim window, does not change pane, this is overwritten below
# set $mod4.end 
# {
# 	$workspace1, \
# 	exec $tmux.select.window.pane.toolbox 1
# }
# 
# set $mod4.pgup 
# {
# 	$workspace1, \
# 	exec $tmux.select.window.pane.toolbox 1 1
# }
# set $mod4.pgdown 
# {
# 	$workspace1, \
# 	exec $tmux.select.window.pane.toolbox 1 2
# }
# 
# set $mod4.shift.home
# {
# 	$workspace1, \
# 	exec $tmux.select.window.pane.toolbox 1 3
# }
# 
# set $mod4.shift.end
# {
# 	$workspace1, \
# 	exec $tmux.select.window.pane.toolbox 1 4
# }
# 
# set $mod4.shift.pgup
# {
# 	$workspace1, \
# 	exec $tmux.select.window.pane.toolbox 1 5
# }
# 
# set $mod4.shift.pgdown
# {
# 	$workspace1, \
# 	exec $tmux.select.window.pane.toolbox 1 6
# }
# 
# 
# 
# ######################################
# 
# 
# 
# 
# 
# set $alt.insert 
# {
# 	$workspace0, \
# 	exec $tmux.select.window.pane 0 0
# }
# 
# set $alt.delete 
# {
# 	$workspace0, \
# 	exec $tmux.select.window.pane 0 1
# }
# 
# set $alt.home 
# {
# 	$workspace0, \
# 	exec $tmux.select.window.pane 1 0
# }
# 
# #In Vim window, does not change pane
# set $alt.end 
# {
# 	$workspace0, \
# 	exec $tmux.select.window.pane 1
# }
# 
# set $alt.pgup 
# {
# 	$workspace0, \
# 	exec $tmux.select.window.pane 1 1
# }
# 
# set $alt.pgdown
# {
# 	$workspace0, \
# 	exec $tmux.select.window.pane 1 2
# }
# 
# set $alt.shift.home
# {
# 	$workspace0, \
# 	exec $tmux.select.window.pane 1 3
# }
# 
# set $alt.shift.end
# {
# 	$workspace0, \
# 	exec $tmux.select.window.pane 1 4
# }
# 
# set $alt.shift.pgup
# {
# 	$workspace0, \
# 	exec $tmux.select.window.pane 2 0
# }
# 
# set $alt.shift.pgdown
# {
# 	$workspace0, \
# 	exec $tmux.select.window.pane 2 1
# }
# 
# ########################################
# 
# bindsym Mod4+Insert $mod4.insert
# bindsym Mod4+Delete $mod4.delete
# bindsym Mod4+Home $mod4.home
# bindsym Mod4+End workspace RightTop
# bindsym Mod4+Prior $mod4.pgup
# bindsym Mod4+Next $mod4.pgdown
# bindsym Shift+Mod4+Home $mod4.shift.home
# bindsym Shift+Mod4+End $mod4.shift.end
# bindsym Shift+Mod4+Prior $mod4.shift.pgup
# bindsym Shift+Mod4+Next $mod4.shift.pgdown
# 
# #########################################
# 
# 
# bindsym Shift+Mod1+Home $alt.shift.home
# bindsym Shift+Mod1+End $alt.shift.end
# bindsym Shift+Mod1+Prior $alt.shift.pgup
# bindsym Shift+Mod1+Next $alt.shift.pgdown
# 
# #########################################
# 
# #bindcode Ctrl+86 $docker1
# #bindcode Ctrl+129 $docker2
# 
# 
# 
# #bindsym Ctrl+KP_Divide workspace MainNonTerminals
# #bindsym Ctrl+KP_Multiply workspace Reading
# 
# 
# #bindcode $mod+0xff55 workspace prev
# #bindcode $mod+0xff56 workspace next
# 
# 
# 
# 
# #########################################
# #########################################
# 
# 
# 
# 
# #set $main_left Wrapper.MainLeft
# #set $main_right Wrapper.MainRight
# #set $inner.readcalmly Inner.ReadCalmly
# #set $Inner.Misc.Holders Inner.Misc.Holders
# #set $inner.input Inner.Input
# #set $inner.root Inner.Root
# #
# #set $lower.with.shift.left 
# #{
# #	workspace 0, \
# #	exec screen -S $main_right -X select 0, \
# #	exec screen -S $Inner.Misc.Holders -X select 0
# #}
# #
# #set $upper.with.shift.left 
# #{
# #	workspace 0, \
# #	exec screen -S $main_right -X select 0, \
# #	exec screen -S $Inner.Misc.Holders -X select 1
# #}
# #
# #set $lower.left 
# #{
# #	workspace 0;\
# #	exec screen -S $main_right -X select 1;\
# #	exec screen -S $inner.readcalmly -X select 0
# #}
# #
# #set $lower.middle
# #{
# #	workspace 0;\
# #	exec screen -S $main_right -X select 2;\
# #	exec screen -S $inner.input -X select 0
# #}
# #
# #set $lower.right
# #{
# #	workspace 0;\
# #	exec screen -S $main_right -X select 3;\
# #	exec screen -S $inner.root -X select 0
# #}
# #
# #set $upper.left
# #{
# #	workspace 0;\
# #	exec screen -S $main_right -X select 1;\
# #	exec screen -S $inner.readcalmly -X select 1
# #}
# #
# #set $upper.middle
# #{
# #	workspace 0;\
# #	exec screen -S $main_right -X select 2;\
# #	exec screen -S $inner.input -X select 1
# #}
# #
# #set $upper.right
# #{
# #	workspace 0;\
# #	exec screen -S $main_right -X select 3;\
# #	exec screen -S $inner.root -X select 1
# #}
# #
# #set $docker1
# #{
# #	workspace 0;\
# #	exec screen -S $main_right -X select 4
# #}
# #
